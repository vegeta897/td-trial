{"version":3,"sources":["webpack://td-trial/webpack/runtime/chunk loaded","webpack://td-trial/./src/style.css","webpack://td-trial/./src/style.css?7163","webpack://td-trial/./src/three/objects.ts","webpack://td-trial/./src/factory/game_object.ts","webpack://td-trial/./src/components/com_object3d.ts","webpack://td-trial/./src/components/com_transform3d.ts","webpack://td-trial/./src/util.ts","webpack://td-trial/./src/components/com_physicsbody.ts","webpack://td-trial/./src/factory/hq.ts","webpack://td-trial/./src/components/com_emitter.ts","webpack://td-trial/./src/factory/river_spawner.ts","webpack://td-trial/./src/game/physics.ts","webpack://td-trial/./src/game/level.ts","webpack://td-trial/./src/three/three_app.ts","webpack://td-trial/./src/three/light.ts","webpack://td-trial/./src/three/camera.ts","webpack://td-trial/./src/systems/system.ts","webpack://td-trial/./src/components/com_target.ts","webpack://td-trial/./src/systems/sys_render.ts","webpack://td-trial/./src/components/com_velocity3d.ts","webpack://td-trial/./src/systems/sys_velocity.ts","webpack://td-trial/./src/components/com_force.ts","webpack://td-trial/./src/components/com_orbit.ts","webpack://td-trial/./src/factory/tumbler.ts","webpack://td-trial/./src/factory/ammo.ts","webpack://td-trial/./src/components/com_ammo.ts","webpack://td-trial/./src/factory/bullet.ts","webpack://td-trial/./src/systems/sys_emitter.ts","webpack://td-trial/./src/systems/sys_bullet.ts","webpack://td-trial/./src/components/com_rotate3d.ts","webpack://td-trial/./src/systems/sys_rotate.ts","webpack://td-trial/./src/systems/sys_target.ts","webpack://td-trial/./src/systems/sys_ammo.ts","webpack://td-trial/./src/systems/sys_physics.ts","webpack://td-trial/./src/systems/sys_transform.ts","webpack://td-trial/./src/systems/sys_orbit.ts","webpack://td-trial/./src/systems/sys_force.ts","webpack://td-trial/./src/systems/sys_camera_follow.ts","webpack://td-trial/./src/game/ecs.ts","webpack://td-trial/./src/three/assets.ts","webpack://td-trial/./src/factory/turret.ts","webpack://td-trial/./src/factory/ammo_loader.ts","webpack://td-trial/./src/game/interaction.ts","webpack://td-trial/./src/game/gui.ts","webpack://td-trial/./src/game/index.ts","webpack://td-trial/./src/game/debug.ts","webpack://td-trial/./src/index.ts","webpack://td-trial/webpack/bootstrap","webpack://td-trial/webpack/runtime/compat get default export","webpack://td-trial/webpack/runtime/define property getters","webpack://td-trial/webpack/runtime/global","webpack://td-trial/webpack/runtime/hasOwnProperty shorthand","webpack://td-trial/webpack/runtime/make namespace object","webpack://td-trial/webpack/runtime/publicPath","webpack://td-trial/webpack/runtime/jsonp chunk loading","webpack://td-trial/webpack/startup"],"names":["deferred","___CSS_LOADER_EXPORT___","push","module","id","geometry","BoxGeometry","material","MeshLambertMaterial","color","cube","Mesh","createMesh","materialParams","meshProperties","newMesh","clone","Object","assign","sprite","Sprite","GameObjectTypes","ThreeObject3D","object3D","lastUpdated","this","parent","remove","options","position","Vector3","rotation","Quaternion","scale","setScalar","target","sources","source","key","keys","val","undefined","assignDefined","prevPosition","prevRotation","prevScale","PhysicsBody","body","world","removeBody","GameObject","type","entity","game","children","forEach","child","add","container","threeApp","scene","create","transform","Tag","userData","emplace","physics","addBody","additionalComponents","insert","hqPrototype","castShadow","hqZoneLineGeometry","radius","segments","points","positions","CircleGeometry","getAttribute","p","count","fromBufferAttribute","BufferGeometry","setFromPoints","createLineCircleGeometry","hqZoneMaterial","LineBasicMaterial","hqZoneLine","LineLoop","translateY","rotateX","Math","PI","HQ","Euler","super","quaternion","setFromEuler","shape","HQ_CUBE_SIZE","x","y","z","EmitterType","Emitter","interval","origin","tick","active","useAmmo","direction","spawnArea","Line3","lineGeometry","riverSpawnerPrototype","Line","RiverSpawner","width","angle","lineAngle","halfWidth","applyEuler","lineStart","sub","lineEnd","SPAWN_INTERVAL","Physics","solver","gravity","allowSleep","quatNormalizeFast","broadphase","iterations","tolerance","addContactMaterial","Materials","ground","tumbler","friction","restitution","Level","plane","PlaneGeometry","planeMaterial","planeMesh","receiveShadow","Origin","groundBody","FLOOR_Y","addToGame","Vector2","THREE","ThreeApp","renderer","WebGLRenderer","composer","EffectComposer","Scene","camera","OrthographicCamera","cameraControls","domElement","systems","smaaPass","SMAAPass","smaa","groups","Map","shadowMap","enabled","setPixelRatio","window","devicePixelRatio","setSize","innerWidth","innerHeight","document","appendChild","PCFSoftShadowMap","ambientLight","AmbientLight","directionalLight","DirectionalLight","set","shadow","near","far","left","right","bottom","top","mapSize","height","updateProjectionMatrix","setupLights","distance","minZoom","maxZoom","maxPolarAngle","setTarget","polarAngle","azimuthAngle","mouseButtons","middle","dollyToCursor","polarRotateSpeed","azimuthRotateSpeed","dampingFactor","draggingDampingFactor","t","cameraToTarget","yIntersect","addEventListener","getTarget","getPosition","subVectors","copy","addScaledVector","setLength","setPosition","setupCameraControls","background","Color","axesHelper","AxesHelper","addPass","RenderPass","onWindowResize","bind","groupID","isNaN","Number","group","Group","dt","system","update","render","aspect","updateCamera","System","level","TargetPriority","Target","maxDistance","faceTarget","priority","Nearest","preferExisting","RenderSystem","transforms","view","targets","each","threeObject3D","paused","interpolate","equals","lerpVectors","slerpQuaternions","targetObject","get","lookAt","Velocity3D","vector3","VelocitySystem","velocity","ForceComponent","magnitude","limit","applyRate","showForceVector","dirty","Orbit","ccw","MASS","tumblerPrototype","SCALE_VECTOR","BODY_SCALE_VECTOR","TUMBLER_CUBE_SIZE","Tumbler","initDirection","mass","w","ammoPrototype","Ammo","loaderPosition","loaderDirection","applyQuaternion","AmmoComponent","current","max","bulletPrototype","emissive","emissiveIntensity","Bullet","turretPosition","emitterDirection","randomRotation","maxAngle","MathUtils","Game","TurretProperties","bulletSpread","multiply","AIM_EULER","bulletSpeed","EmitterSystem","emitter","Turret","ammo","setComponent","Loader","at","random","MAX_DISTANCE_SQ","ENEMY_SIZE_SQ","BulletSystem","enemies","raycaster","Raycaster","tumblerGroup","velocityLength","length","lengthSq","destroy","enemy","enemyPos","distanceToSquared","hitEnemy","exists","normalize","intersectObjects","object","multiplyScalar","bullet","Rotate3D","RotateSystem","objectProxy","Object3D","TargetSystem","targetViews","maxDistanceSquared","targetTransform","bestTarget","has","targetEntity","distanceSquared","score","LowestAmmo","TURRET_SIZE_SQ","AmmoSystem","turrets","turret","turretPos","min","PhysicsSystem","bodies","TickRate","setZero","step","lengthSquared","sleepState","TransformSystem","UP","SLICES","RADIANS_PER_SLICE","orbitQuaternions","i","setFromAxisAngle","RADIUS_VECTOR","OrbitSystem","force","slice","round","orbitQuaternion","ForceSystem","arrow","ArrowHelper","setDirection","velocityDotProduct","dot","unit","velocityRatio","velocityScale","applyForce","followBox","Box3","followVec","CameraFollowSystem","controls","FollowObject","interaction","followObject","gui","setFromObject","getCenter","ECS","World","AssetNames","assetList","TurretGeometry","LoaderGeometry","loader","Assets","ammoSpriteMaterial","SpriteMaterial","turretPrototype","ammoLoaderPrototype","ammoBar","fireRate","targetDistance","AmmoLoader","InteractionState","Interaction","state","NONE","event","button","FOLLOW","mouse","clientX","clientY","setFromCamera","intersected","tumblerClick","find","groundClick","point","manhattanLength","BUILD_TURRET","BUILD_LOADER","GUI","statsContainer","createElement","buildContainer","displays","buttons","createDisplay","size","setInterval","d","heading","innerText","createButton","style","visibility","element","hideOnState","disabled","name","getValue","label","ecs","OBJLoader","Promise","all","map","assetName","objPath","loadAsync","BufferGeometryUtils","translate","loadAssets","registerSystems","simFolder","addFolder","onChange","tickTime","TickTime","updateDisplay","onFinishChange","open","createDebugGUI","stats","dom","lag","lastUpdate","performance","now","requestAnimationFrame","delta","begin","end","preloadTicks","init","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","__webpack_modules__","call","m","O","result","chunkIds","fn","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","a","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","value","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","Error","replace","installedChunks","179","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"mappings":"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","file":"main.bundle.js","sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tresult = fn();\n\t\t}\n\t}\n\treturn result;\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.push([module.id, \"@import url(https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@600&display=swap);\"]);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n    padding: 0;\\n    margin: 0;\\n}\\n\\nbody  {\\n    background: #191919;\\n    font-family: 'Source Sans Pro', sans-serif;\\n}\\n\\n#gui-stats-container {\\n    display: flex;\\n    font-size: 14px;\\n    position: fixed;\\n    left: 50%;\\n    top: 0;\\n    transform: translate(-50%,0);\\n    color: aliceblue;\\n}\\n\\n#gui-stats-container span {\\n    width: 100px;\\n}\\n\\n#gui-build-container {\\n    opacity: 0.9;\\n    position: fixed;\\n    top: 50%;\\n    transform: translate(0, -50%);\\n    padding: 2px 8px;\\n    width: 120px;\\n    margin-left: 8px;\\n    text-align: center;\\n    background: rgba(26, 28, 44, 0.4);\\n}\\n\\n#gui-build-container h2 {\\n    font-size: 24px;\\n    text-transform: uppercase;\\n    color: aliceblue;\\n    margin: 0 0 4px;\\n}\\n\\n#gui-build-container button {\\n    font-family: 'Source Sans Pro', sans-serif;\\n    font-size: 32px;\\n    display: block;\\n    padding: 0.3em;\\n    margin-bottom: 0.2em;\\n    width: 100%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/style.css\"],\"names\":[],\"mappings\":\"AAEA;IACI,UAAU;IACV,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,0CAA0C;AAC9C;;AAEA;IACI,aAAa;IACb,eAAe;IACf,eAAe;IACf,SAAS;IACT,MAAM;IACN,4BAA4B;IAC5B,gBAAgB;AACpB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;IACZ,eAAe;IACf,QAAQ;IACR,6BAA6B;IAC7B,gBAAgB;IAChB,YAAY;IACZ,gBAAgB;IAChB,kBAAkB;IAClB,iCAAiC;AACrC;;AAEA;IACI,eAAe;IACf,yBAAyB;IACzB,gBAAgB;IAChB,eAAe;AACnB;;AAEA;IACI,0CAA0C;IAC1C,eAAe;IACf,cAAc;IACd,cAAc;IACd,oBAAoB;IACpB,WAAW;AACf\",\"sourcesContent\":[\"@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@600&display=swap');\\n\\n* {\\n    padding: 0;\\n    margin: 0;\\n}\\n\\nbody  {\\n    background: #191919;\\n    font-family: 'Source Sans Pro', sans-serif;\\n}\\n\\n#gui-stats-container {\\n    display: flex;\\n    font-size: 14px;\\n    position: fixed;\\n    left: 50%;\\n    top: 0;\\n    transform: translate(-50%,0);\\n    color: aliceblue;\\n}\\n\\n#gui-stats-container span {\\n    width: 100px;\\n}\\n\\n#gui-build-container {\\n    opacity: 0.9;\\n    position: fixed;\\n    top: 50%;\\n    transform: translate(0, -50%);\\n    padding: 2px 8px;\\n    width: 120px;\\n    margin-left: 8px;\\n    text-align: center;\\n    background: rgba(26, 28, 44, 0.4);\\n}\\n\\n#gui-build-container h2 {\\n    font-size: 24px;\\n    text-transform: uppercase;\\n    color: aliceblue;\\n    margin: 0 0 4px;\\n}\\n\\n#gui-build-container button {\\n    font-family: 'Source Sans Pro', sans-serif;\\n    font-size: 32px;\\n    display: block;\\n    padding: 0.3em;\\n    margin-bottom: 0.2em;\\n    width: 100%;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!./style.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import {\n\tBoxGeometry,\n\tBufferGeometry,\n\tMesh,\n\tMeshLambertMaterial,\n\tSprite,\n} from 'three'\nimport { MeshLambertMaterialParameters } from 'three/src/materials/MeshLambertMaterial'\n\nconst geometry = new BoxGeometry()\nconst material = new MeshLambertMaterial({ color: 0x00ff00 })\nconst cube = new Mesh(geometry, material)\n\nexport interface IMeshOptions {\n\tmaterialParams?: MeshLambertMaterialParameters\n\tgeometry?: BufferGeometry\n\tmeshProperties?: Partial<Mesh>\n}\n\nexport function createMesh({\n\tmaterialParams,\n\tgeometry,\n\tmeshProperties,\n}: IMeshOptions): Mesh {\n\tconst newMesh = geometry ? new Mesh(geometry, material) : <Mesh>cube.clone()\n\tif (materialParams) newMesh.material = new MeshLambertMaterial(materialParams)\n\tif (meshProperties) Object.assign(newMesh, meshProperties)\n\treturn newMesh\n}\n\nconst sprite = new Sprite()\n\nexport function createSprite(): Sprite {\n\tconst newSprite = <Sprite>sprite.clone()\n\treturn newSprite\n}\n","import Game from '../game'\nimport { Object3D } from 'three'\nimport { Component, Entity, Tag } from 'uecs'\nimport ThreeObject3D from '../components/com_object3d'\nimport Transform3D from '../components/com_transform3d'\nimport { Body } from 'cannon-es'\nimport PhysicsBody from '../components/com_physicsbody'\n\nexport enum GameObjectTypes {\n\tNone,\n\tTurret,\n\tBullet,\n\tAmmoLoader,\n\tAmmo,\n\tTumbler,\n\tHQ,\n\tRiverSpawner,\n}\n\nexport default abstract class GameObject {\n\tgame?: Game\n\tobject3D: Object3D\n\tbody?: Body\n\tentity: Entity | null = null\n\ttype: GameObjectTypes\n\tprotected children?: Object3D[]\n\tprotected container?: Object3D\n\tprotected additionalComponents?: Component[]\n\tprotected transform: Partial<Transform3D>\n\tprotected constructor(type = 0, object3D: Object3D) {\n\t\tthis.type = type\n\t\tthis.object3D = object3D\n\t}\n\taddToGame(game: Game) {\n\t\tthis.game = game\n\t\tif (this.children)\n\t\t\tthis.children.forEach((child) => this.object3D.add(child))\n\t\tthis.container = this.container || this.game.threeApp.scene\n\t\tthis.container.add(this.object3D)\n\t\tthis.entity = this.game.world.create(\n\t\t\tnew ThreeObject3D(this.object3D),\n\t\t\tnew Transform3D(this.transform),\n\t\t\tTag.for(this.type)\n\t\t)\n\t\tthis.object3D.userData.entity = this.entity\n\t\tif (this.body) {\n\t\t\tthis.game.world.emplace(this.entity, new PhysicsBody(this.body))\n\t\t\tthis.game.physics.world.addBody(this.body)\n\t\t}\n\t\tif (this.additionalComponents)\n\t\t\tthis.game.world.insert(this.entity, ...this.additionalComponents)\n\t}\n}\n","import { Object3D } from 'three'\n\nexport default class ThreeObject3D {\n\tlastUpdated = -1\n\tconstructor(public object3D: Object3D) {}\n\tfree() {\n\t\tthis.object3D.parent?.remove(this.object3D)\n\t}\n}\n","import { Quaternion, Vector3 } from 'three'\nimport { assignDefined } from '../util'\n\nexport default class Transform3D {\n\tposition: Vector3 = new Vector3()\n\trotation: Quaternion = new Quaternion()\n\tscale: Vector3 = new Vector3().setScalar(1)\n\tprevPosition: Vector3\n\tprevRotation: Quaternion\n\tprevScale: Vector3\n\tlastUpdated = -1\n\tconstructor(options: Partial<Transform3D> = {}) {\n\t\tassignDefined(this, options)\n\t\tthis.prevPosition = this.position.clone()\n\t\tthis.prevRotation = this.rotation.clone()\n\t\tthis.prevScale = this.scale.clone()\n\t}\n}\n","import Transform3D from './components/com_transform3d'\nimport { BufferGeometry, CircleGeometry, Vector2, Vector3 } from 'three'\n\nexport function cloneTransform3D(transform: Transform3D): Transform3D {\n\treturn new Transform3D({\n\t\tposition: transform.position.clone(),\n\t\trotation: transform.rotation.clone(),\n\t\tscale: transform.scale.clone(),\n\t})\n}\n\nexport function createLineCircleGeometry(\n\tradius = 1,\n\tsegments = 64\n): BufferGeometry {\n\tconst points: Vector3[] = []\n\tconst positions = new CircleGeometry(radius, segments).getAttribute(\n\t\t'position'\n\t)\n\tfor (let p = 1; p < positions.count; p++) {\n\t\tpoints.push(new Vector3().fromBufferAttribute(positions, p))\n\t}\n\treturn new BufferGeometry().setFromPoints(points)\n}\n\n// https://stackoverflow.com/a/39514270/2612679\nexport function assignDefined<T extends Record<keyof T, unknown>>(\n\ttarget: T,\n\t...sources: Partial<T>[]\n) {\n\tfor (const source of sources) {\n\t\tfor (const key of Object.keys(source)) {\n\t\t\tconst val = source[key as keyof T]\n\t\t\tif (val !== undefined) {\n\t\t\t\ttarget[key as keyof T] = val!\n\t\t\t}\n\t\t}\n\t}\n\treturn target\n}\n\nexport function cleanPrintVector(\n\tvector: Vector2 | Vector3,\n\tprecision = 2\n): string {\n\tconst axes = ['x', 'y', 'z']\n\treturn vector\n\t\t.toArray()\n\t\t.map((a, i) => axes[i] + ': ' + a.toFixed(precision))\n\t\t.join(', ')\n}\n","import { Body } from 'cannon-es'\n\nexport default class PhysicsBody {\n\tconstructor(public body: Body) {}\n\tfree() {\n\t\tthis.body.world?.removeBody(this.body)\n\t}\n}\n","import { createMesh } from '../three/objects'\nimport { Euler, LineBasicMaterial, LineLoop, Quaternion, Vector3 } from 'three'\nimport * as CANNON from 'cannon-es'\nimport GameObject, { GameObjectTypes } from './game_object'\nimport { createLineCircleGeometry } from '../util'\n\nconst HQ_CUBE_SIZE = 3\nconst HQ_ZONE_RADIUS = 8\n\nconst hqPrototype = createMesh({\n\tmaterialParams: { color: 0x38b764 },\n\tmeshProperties: { castShadow: true },\n})\nconst hqZoneLineGeometry = createLineCircleGeometry(\n\tHQ_ZONE_RADIUS / HQ_CUBE_SIZE\n)\nconst hqZoneMaterial = new LineBasicMaterial({ color: 0x00eeaa })\nconst hqZoneLine = new LineLoop(hqZoneLineGeometry, hqZoneMaterial)\nhqZoneLine.translateY(-1 / 2 + 0.05)\nhqZoneLine.rotateX(Math.PI / 2)\nhqPrototype.add(hqZoneLine)\n\nexport default class HQ extends GameObject {\n\tconstructor(position: Vector3, rotation = new Euler()) {\n\t\tsuper(GameObjectTypes.HQ, hqPrototype.clone())\n\t\tconst quaternion = new Quaternion().setFromEuler(rotation)\n\t\tthis.body = new CANNON.Body({\n\t\t\ttype: CANNON.Body.STATIC,\n\t\t\tshape: new CANNON.Box(new CANNON.Vec3(1, 1, 1).scale(HQ_CUBE_SIZE / 2)),\n\t\t\tposition: new CANNON.Vec3(position.x, position.y, position.z),\n\t\t\tquaternion: <CANNON.Quaternion>(<unknown>quaternion.clone()),\n\t\t})\n\t\tthis.transform = {\n\t\t\tposition,\n\t\t\trotation: quaternion.clone(),\n\t\t\tscale: new Vector3().setScalar(HQ_CUBE_SIZE),\n\t\t}\n\t}\n}\n","import { Line3, Quaternion, Vector3 } from 'three'\n\nexport enum EmitterType {\n\tRiverSpawner,\n\tTurret,\n\tLoader,\n}\n\nexport default class Emitter {\n\tconstructor(\n\t\tpublic type: EmitterType,\n\t\tpublic interval: number,\n\t\tpublic origin: Vector3 = new Vector3(),\n\t\tpublic tick: number = 0,\n\t\tpublic active: boolean = true,\n\t\tpublic useAmmo: boolean = false,\n\t\tpublic direction: Quaternion = new Quaternion(),\n\t\tpublic spawnArea: Line3 = new Line3()\n\t) {\n\t\tif (interval < 1) throw 'Emitter interval must be at least 1'\n\t}\n}\n","import Emitter, { EmitterType } from '../components/com_emitter'\nimport {\n\tBufferGeometry,\n\tEuler,\n\tLine,\n\tLine3,\n\tLineBasicMaterial,\n\tQuaternion,\n\tVector3,\n} from 'three'\nimport GameObject, { GameObjectTypes } from './game_object'\n\nconst SPAWN_INTERVAL = 200\n\nconst lineGeometry = new BufferGeometry().setFromPoints([\n\tnew Vector3(0.5),\n\tnew Vector3(-0.5),\n])\nconst riverSpawnerPrototype = new Line(\n\tlineGeometry,\n\tnew LineBasicMaterial({ color: 0x00ffff })\n)\n\nexport default class RiverSpawner extends GameObject {\n\tconstructor(position: Vector3, width = 1, direction: 0 | 1 | 2 | 3 = 0) {\n\t\tsuper(GameObjectTypes.RiverSpawner, riverSpawnerPrototype.clone())\n\t\tconst angle = direction * (Math.PI / 2)\n\t\tconst lineAngle = new Euler(0, angle + Math.PI / 2)\n\t\tconst halfWidth = new Vector3(width / 2).applyEuler(lineAngle)\n\t\tthis.transform = {\n\t\t\tposition,\n\t\t\trotation: new Quaternion().setFromEuler(lineAngle),\n\t\t\tscale: new Vector3(width),\n\t\t}\n\t\tconst lineStart = position.clone().sub(halfWidth)\n\t\tconst lineEnd = position.clone().add(halfWidth)\n\t\tthis.additionalComponents = [\n\t\t\tnew Emitter(\n\t\t\t\tEmitterType.RiverSpawner,\n\t\t\t\tSPAWN_INTERVAL,\n\t\t\t\tposition,\n\t\t\t\tSPAWN_INTERVAL - 1,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tnew Quaternion().setFromEuler(new Euler(0, angle)),\n\t\t\t\tnew Line3(lineStart, lineEnd)\n\t\t\t),\n\t\t]\n\t}\n}\n","import {\n\tVec3,\n\tWorld,\n\tMaterial,\n\tContactMaterial,\n\tSplitSolver,\n\tGSSolver,\n\tSAPBroadphase,\n} from 'cannon-es'\n\nexport class Physics {\n\tsolver = new SplitSolver(new GSSolver())\n\tworld = new World({\n\t\tgravity: new Vec3(0, -20, 0),\n\t\tallowSleep: true,\n\t\tquatNormalizeFast: true, // Turn this off if things are unstable\n\t\tsolver: this.solver,\n\t})\n\tstatic Materials = {\n\t\tground: new Material('ground'),\n\t\ttumbler: new Material('tumbler'),\n\t}\n\tconstructor() {\n\t\tthis.world.broadphase = new SAPBroadphase(this.world)\n\t\tthis.solver.iterations = 10\n\t\tthis.solver.tolerance = 1e-7\n\t\tthis.world.addContactMaterial(\n\t\t\tnew ContactMaterial(Physics.Materials.ground, Physics.Materials.tumbler, {\n\t\t\t\tfriction: 100,\n\t\t\t\trestitution: 0.5,\n\t\t\t})\n\t\t)\n\t}\n}\n","import {\n\tEuler,\n\tMesh,\n\tMeshLambertMaterial,\n\tPlaneGeometry,\n\tVector2,\n\tVector3,\n} from 'three'\nimport Game from './'\nimport { Body, Plane } from 'cannon-es'\nimport HQ from '../factory/hq'\nimport RiverSpawner from '../factory/river_spawner'\nimport { Physics } from './physics'\n\nexport const FLOOR_Y = 0\n\nexport class Level {\n\tground: Mesh\n\tgame: Game\n\tstatic Origin = new Vector2(0, 0)\n\tconstructor(game: Game) {\n\t\tthis.game = game\n\n\t\t// Create ground plane\n\t\tconst plane = new PlaneGeometry(10 ** 3, 10 ** 3)\n\t\tconst planeMaterial = new MeshLambertMaterial({ color: 0x29264f })\n\t\tconst planeMesh = new Mesh(plane, planeMaterial)\n\t\tplaneMesh.receiveShadow = true\n\t\tplaneMesh.position.y = FLOOR_Y\n\t\tplaneMesh.position.x = Level.Origin.x\n\t\tplaneMesh.position.z = Level.Origin.y\n\t\tplaneMesh.rotateX(-Math.PI / 2)\n\t\tthis.game.threeApp.scene.add(planeMesh)\n\t\tthis.ground = planeMesh\n\t\tconst groundBody = new Body({\n\t\t\ttype: Body.STATIC,\n\t\t\tshape: new Plane(),\n\t\t\tmaterial: Physics.Materials.ground,\n\t\t})\n\t\tgroundBody.position.y = FLOOR_Y\n\t\tgroundBody.quaternion.setFromEuler(-Math.PI / 2, 0, 0) // make it face up\n\t\tthis.game.physics.world.addBody(groundBody)\n\t}\n\tcreate() {\n\t\tnew HQ(\n\t\t\tnew Vector3(Level.Origin.x, FLOOR_Y + 1.5, Level.Origin.y),\n\t\t\tnew Euler(0, 0.2)\n\t\t).addToGame(this.game)\n\n\t\tnew RiverSpawner(new Vector3(0, FLOOR_Y + 0.25, -14), 12, 0).addToGame(\n\t\t\tthis.game\n\t\t)\n\t}\n}\n\nexport class PathNode extends Vector3 {\n\tnextNode?: PathNode\n\taddNode(x = 0, y = 0, z = 0): PathNode {\n\t\tthis.nextNode = new PathNode(this.x + x, this.y + y, this.z + z)\n\t\treturn this.nextNode\n\t}\n}\n","import * as THREE from 'three'\nimport {\n\tAxesHelper,\n\tColor,\n\tGroup,\n\tObject3D,\n\tOrthographicCamera,\n\tScene,\n\tWebGLRenderer,\n} from 'three'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass'\nimport { System } from '../systems/system'\nimport CameraControls from 'camera-controls'\nimport { setupLights } from './light'\nimport { setupCameraControls, updateCamera } from './camera'\nimport { FLOOR_Y } from '../game/level'\nimport { GameObjectTypes } from '../factory/game_object'\n\nCameraControls.install({ THREE })\n\nconst SCALE = 16\n\nexport class ThreeApp {\n\trenderer = new WebGLRenderer()\n\tcomposer = new EffectComposer(this.renderer)\n\tscene = new Scene()\n\tcamera = new OrthographicCamera(0, 0, 0, 0, 0, 300)\n\tcameraControls = new CameraControls(this.camera, this.renderer.domElement)\n\tsystems: System[] = []\n\tsmaaPass = new SMAAPass(0, 0)\n\tsmaa = true\n\tgroups: Map<GameObjectTypes, Group> = new Map()\n\tstatic FollowObject: Object3D | null\n\tconstructor() {\n\t\t// Set up renderer\n\t\tthis.renderer.shadowMap.enabled = true\n\t\tthis.renderer.setPixelRatio(window.devicePixelRatio)\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight)\n\t\tdocument.body.appendChild(this.renderer.domElement)\n\n\t\t// Set up lights & camera\n\t\tsetupLights(this)\n\t\tsetupCameraControls(this)\n\n\t\t// Add background color and fog\n\t\tthis.scene.background = new Color(0x38286b)\n\t\t// this.scene.fog = new THREE.Fog(0x38286b, 130, 150)\n\n\t\t// Create axes helper\n\t\tconst axesHelper = new AxesHelper(3)\n\t\taxesHelper.position.set(0, FLOOR_Y + 0.05, 8)\n\t\tthis.scene.add(axesHelper)\n\n\t\t// Render passes\n\t\tthis.composer.addPass(new RenderPass(this.scene, this.camera))\n\t\tthis.composer.addPass(this.smaaPass)\n\n\t\t// Handle window sizing\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this))\n\t\tthis.onWindowResize()\n\n\t\t// Create groups\n\t\tfor (const groupID in GameObjectTypes) {\n\t\t\tif (!isNaN(Number(groupID))) {\n\t\t\t\tconst group = new Group()\n\t\t\t\tthis.groups.set(Number(groupID), group)\n\t\t\t\tthis.scene.add(group)\n\t\t\t}\n\t\t}\n\t}\n\trender(tick: number, dt: number) {\n\t\tthis.systems.forEach((system) => system.update(tick, dt))\n\t\tthis.cameraControls.update(1)\n\t\tthis.composer.render()\n\t}\n\tonWindowResize() {\n\t\tupdateCamera(this.camera, SCALE)\n\t\tthis.renderer.setSize(window.innerWidth, window.innerHeight)\n\t\tthis.composer.setSize(window.innerWidth, window.innerHeight)\n\t}\n}\n","import {\n\tAmbientLight,\n\tCameraHelper,\n\tDirectionalLight,\n\tPCFSoftShadowMap,\n} from 'three'\nimport { ThreeApp } from './three_app'\n\nconst SHOW_LIGHT_HELPER = false\n\nexport function setupLights({ scene, renderer }: ThreeApp) {\n\trenderer.shadowMap.type = PCFSoftShadowMap\n\tconst ambientLight = new AmbientLight(0x5d275d, 1.5)\n\tscene.add(ambientLight)\n\tconst directionalLight = new DirectionalLight(0xffffff, 1)\n\tdirectionalLight.position.set(30, 50, -20)\n\tdirectionalLight.castShadow = true\n\tdirectionalLight.shadow.camera.near = 10\n\tdirectionalLight.shadow.camera.far = 100\n\tdirectionalLight.shadow.camera.left = -40\n\tdirectionalLight.shadow.camera.right = 40\n\tdirectionalLight.shadow.camera.bottom = -40\n\tdirectionalLight.shadow.camera.top = 40\n\tdirectionalLight.shadow.mapSize.width = 4096\n\tdirectionalLight.shadow.mapSize.height = 4096\n\tdirectionalLight.shadow.camera.updateProjectionMatrix()\n\tscene.add(directionalLight)\n\tif (SHOW_LIGHT_HELPER)\n\t\tscene.add(new CameraHelper(directionalLight.shadow.camera))\n}\n","import CameraControls from 'camera-controls'\nimport { ThreeApp } from './three_app'\nimport { OrthographicCamera, Vector3 } from 'three'\nimport { FLOOR_Y, Level } from '../game/level'\n\nconst CAMERA_DISTANCE = 100\n\nexport function setupCameraControls({ cameraControls }: ThreeApp) {\n\t// Set up camera controls\n\tcameraControls.distance = CAMERA_DISTANCE\n\tcameraControls.minZoom = 0.1\n\tcameraControls.maxZoom = 7\n\tcameraControls.maxPolarAngle = Math.PI * 0.45\n\tcameraControls.setTarget(Level.Origin.x, FLOOR_Y, Level.Origin.y)\n\tcameraControls.polarAngle = Math.PI / 4\n\tcameraControls.azimuthAngle = (Math.PI * 2) / 6\n\tcameraControls.mouseButtons.left = CameraControls.ACTION.NONE\n\tcameraControls.mouseButtons.right = CameraControls.ACTION.ROTATE\n\tcameraControls.mouseButtons.middle = CameraControls.ACTION.TRUCK\n\tcameraControls.dollyToCursor = true\n\tcameraControls.polarRotateSpeed = 0.5\n\tcameraControls.azimuthRotateSpeed = 0.7\n\tcameraControls.dampingFactor = 0.01\n\tcameraControls.draggingDampingFactor = 0.02\n\n\tconst t = new Vector3()\n\tconst p = new Vector3()\n\tconst cameraToTarget = new Vector3()\n\tconst yIntersect = new Vector3()\n\tcameraControls.addEventListener('update', () => {\n\t\t// Keep target at y = 0 and camera distance constant\n\t\tcameraControls.getTarget(t)\n\t\tcameraControls.getPosition(p)\n\t\t// Extend camera-target vector to y = 0\n\t\tcameraToTarget.subVectors(p, t)\n\t\tyIntersect.copy(t.addScaledVector(cameraToTarget, t.y / (t.y - p.y)))\n\t\tcameraControls.setTarget(yIntersect.x, 0, yIntersect.z)\n\t\t// Move camera to appropriate distance\n\t\tyIntersect.add(cameraToTarget.setLength(CAMERA_DISTANCE))\n\t\tcameraControls.setPosition(yIntersect.x, yIntersect.y, yIntersect.z)\n\t})\n}\n\nexport function updateCamera(camera: OrthographicCamera, scale: number) {\n\tconst aspect = window.innerWidth / window.innerHeight\n\tcamera.left = -aspect * scale\n\tcamera.right = aspect * scale\n\tcamera.top = scale\n\tcamera.bottom = -scale\n\tcamera.updateProjectionMatrix()\n}\n","import { World } from 'uecs'\nimport Game from '../game'\nimport { ThreeApp } from '../three/three_app'\nimport { Level } from '../game/level'\n\nexport abstract class System {\n\tgame: Game\n\tworld: World\n\tthreeApp: ThreeApp\n\tlevel: Level\n\n\tconstructor(game: Game) {\n\t\tthis.game = game\n\t\tthis.world = game.world\n\t\tthis.threeApp = game.threeApp\n\t\tthis.level = game.level\n\t}\n\n\tabstract update(tick?: number, dt?: number): void\n}\n","import { Entity } from 'uecs'\nimport { GameObjectTypes } from '../factory/game_object'\n\nexport enum TargetPriority {\n\tNearest,\n\tLowestAmmo,\n}\n\nexport default class Target {\n\tconstructor(\n\t\tpublic type: GameObjectTypes,\n\t\tpublic maxDistance: number = 1,\n\t\tpublic faceTarget: boolean = true,\n\t\tpublic priority: TargetPriority = TargetPriority.Nearest,\n\t\tpublic preferExisting: boolean = true,\n\t\tpublic entity: Entity | null = null\n\t) {}\n}\n","import { System } from './system'\nimport ThreeObject3D from '../components/com_object3d'\nimport Transform3D from '../components/com_transform3d'\nimport Target from '../components/com_target'\n\nexport default class RenderSystem extends System {\n\ttransforms = this.world.view(ThreeObject3D, Transform3D)\n\ttargets = this.world.view(ThreeObject3D, Target)\n\tupdate(tick: number, dt: number) {\n\t\t// TODO: Disable/enable LERPing in real time based on framerate/tickrate?\n\t\tthis.transforms.each((entity, threeObject3D, transform) => {\n\t\t\tconst { position, quaternion, scale } = threeObject3D.object3D\n\t\t\tconst { prevPosition, prevRotation, prevScale } = transform\n\t\t\tif (threeObject3D.lastUpdated === -1) {\n\t\t\t\t// Initialize Object3D\n\t\t\t\tthreeObject3D.lastUpdated = tick\n\t\t\t\tposition.copy(prevPosition)\n\t\t\t\tquaternion.copy(prevRotation)\n\t\t\t\tscale.copy(prevScale)\n\t\t\t}\n\t\t\tif (this.game.paused) return\n\t\t\tif (this.game.interpolate && transform.lastUpdated === tick) {\n\t\t\t\t// Interpolating and transform was updated in this tick\n\t\t\t\tthreeObject3D.lastUpdated = tick\n\t\t\t\tif (!prevPosition.equals(transform.position))\n\t\t\t\t\tposition.lerpVectors(prevPosition, transform.position, dt)\n\t\t\t\tif (!prevRotation.equals(transform.rotation))\n\t\t\t\t\tquaternion.slerpQuaternions(prevRotation, transform.rotation, dt)\n\t\t\t\tif (!prevScale.equals(transform.scale))\n\t\t\t\t\tscale.lerpVectors(prevScale, transform.scale, dt)\n\t\t\t} else if (transform.lastUpdated > threeObject3D.lastUpdated) {\n\t\t\t\t// Not interpolating and Object3D is outdated\n\t\t\t\t// This will also catch any outdated objects didn't render during an updated tick\n\t\t\t\tthreeObject3D.lastUpdated = tick\n\t\t\t\tposition.copy(transform.position)\n\t\t\t\tquaternion.copy(transform.rotation)\n\t\t\t\tscale.copy(transform.scale)\n\t\t\t}\n\t\t})\n\t\tthis.targets.each((entity, { object3D }, target) => {\n\t\t\t// TODO: This is slow, try to optimize\n\t\t\tif (!target.entity || !target.faceTarget) return\n\t\t\tconst targetObject = this.world.get(target.entity, ThreeObject3D)\n\t\t\tif (targetObject) object3D.lookAt(targetObject.object3D.position)\n\t\t})\n\t}\n}\n","import { Vector3 } from 'three'\n\nexport default class Velocity3D {\n\tconstructor(public vector3: Vector3 = new Vector3()) {}\n}\n","import { System } from './system'\nimport Transform3D from '../components/com_transform3d'\nimport Velocity3D from '../components/com_velocity3d'\n\nexport default class VelocitySystem extends System {\n\tview = this.world.view(Transform3D, Velocity3D)\n\tupdate(tick: number) {\n\t\tthis.view.each((entity, transform, velocity) => {\n\t\t\ttransform.position.add(velocity.vector3)\n\t\t\ttransform.lastUpdated = tick\n\t\t})\n\t}\n}\n","import { ArrowHelper, Quaternion, Vector3 } from 'three'\n\nexport default class ForceComponent {\n\tvelocity = new Vector3()\n\tdirty = true\n\tarrow: ArrowHelper\n\tconstructor(\n\t\tpublic direction: Quaternion,\n\t\tpublic magnitude: number,\n\t\tpublic limit = 0,\n\t\tpublic applyRate = 1,\n\t\tpublic showForceVector = false\n\t) {}\n}\n","import { Vector2 } from 'three'\n\nexport default class Orbit {\n\tconstructor(public origin: Vector2, public ccw = false) {}\n}\n","import { createMesh } from '../three/objects'\nimport { Quaternion, Vector3 } from 'three'\nimport * as CANNON from 'cannon-es'\nimport ForceComponent from '../components/com_force'\nimport GameObject, { GameObjectTypes } from './game_object'\nimport Orbit from '../components/com_orbit'\nimport { Physics } from '../game/physics'\nimport { Level } from '../game/level'\n\nexport const TUMBLER_CUBE_SIZE = 0.3\nconst MASS = TUMBLER_CUBE_SIZE ** 3\nconst FORCE = 3\nconst SPEED_LIMIT = 2\n\nconst tumblerPrototype = createMesh({\n\tmaterialParams: { color: 0x73eff7 },\n\tmeshProperties: { castShadow: true },\n})\n\nconst SCALE_VECTOR = new Vector3().setScalar(TUMBLER_CUBE_SIZE)\nconst BODY_SCALE_VECTOR = new CANNON.Vec3(1, 1, 1).scale(TUMBLER_CUBE_SIZE / 2)\n\nexport default class Tumbler extends GameObject {\n\tconstructor(position: Vector3, initDirection: Quaternion) {\n\t\tsuper(GameObjectTypes.Tumbler, tumblerPrototype.clone())\n\t\tthis.body = new CANNON.Body({\n\t\t\tmass: MASS,\n\t\t\tshape: new CANNON.Box(BODY_SCALE_VECTOR.clone()),\n\t\t\tposition: new CANNON.Vec3(position.x, position.y, position.z),\n\t\t\tquaternion: new CANNON.Quaternion(\n\t\t\t\tinitDirection.x,\n\t\t\t\tinitDirection.y,\n\t\t\t\tinitDirection.z,\n\t\t\t\tinitDirection.w\n\t\t\t),\n\t\t\tmaterial: Physics.Materials.tumbler,\n\t\t})\n\t\tthis.transform = {\n\t\t\tposition,\n\t\t\trotation: initDirection.clone(),\n\t\t\tscale: SCALE_VECTOR.clone(),\n\t\t}\n\t\tthis.additionalComponents = [\n\t\t\tnew Orbit(Level.Origin),\n\t\t\tnew ForceComponent(initDirection.clone(), FORCE, SPEED_LIMIT, 2),\n\t\t]\n\t}\n}\n","import { createMesh } from '../three/objects'\nimport { Quaternion, Vector3 } from 'three'\nimport Velocity3D from '../components/com_velocity3d'\nimport GameObject, { GameObjectTypes } from './game_object'\n\nconst AMMO_SCALE = 0.2\n\nconst ammoPrototype = createMesh({\n\tmaterialParams: { color: 0x73eff7 },\n})\n\nexport default class Ammo extends GameObject {\n\tconstructor(loaderPosition: Vector3, loaderDirection: Quaternion) {\n\t\tsuper(GameObjectTypes.Ammo, ammoPrototype.clone())\n\t\tconst rotation = loaderDirection.clone()\n\t\tthis.transform = {\n\t\t\tposition: loaderPosition,\n\t\t\trotation,\n\t\t\tscale: new Vector3().setScalar(AMMO_SCALE),\n\t\t}\n\t\tthis.additionalComponents = [\n\t\t\tnew Velocity3D(new Vector3(0, 0, 0.1).applyQuaternion(rotation)),\n\t\t]\n\t}\n}\n","import { Sprite } from 'three'\n\nexport default class AmmoComponent {\n\tpublic max: number\n\tconstructor(public current: number, public sprite: Sprite) {\n\t\tthis.max = current\n\t}\n\tfree() {\n\t\tthis.sprite.parent?.remove(this.sprite)\n\t}\n}\n","import Velocity3D from '../components/com_velocity3d'\nimport { Euler, MathUtils, Quaternion, Vector3 } from 'three'\nimport Game from '../game'\nimport GameObject, { GameObjectTypes } from './game_object'\nimport { createMesh } from '../three/objects'\n\nconst BULLET_SCALE = 0.12\n\nconst bulletPrototype = createMesh({\n\tmaterialParams: {\n\t\tcolor: 0,\n\t\temissive: 0xa7f070,\n\t\temissiveIntensity: 1,\n\t},\n})\n\nexport default class Bullet extends GameObject {\n\tconstructor(turretPosition: Vector3, emitterDirection: Quaternion) {\n\t\tsuper(GameObjectTypes.Bullet, bulletPrototype.clone())\n\t\tconst rotation = emitterDirection.clone()\n\t\tconst randomRotation = randomizeAim(\n\t\t\temitterDirection,\n\t\t\tMathUtils.degToRad(Game.TurretProperties.bulletSpread)\n\t\t)\n\t\tthis.transform = {\n\t\t\tposition: turretPosition.clone(),\n\t\t\trotation: randomRotation,\n\t\t\tscale: new Vector3().setScalar(BULLET_SCALE),\n\t\t}\n\t\tthis.additionalComponents = [\n\t\t\tnew Velocity3D(\n\t\t\t\tnew Vector3(0, 0, Game.TurretProperties.bulletSpeed).applyQuaternion(\n\t\t\t\t\trotation\n\t\t\t\t)\n\t\t\t),\n\t\t]\n\t}\n}\n\nconst AIM_EULER = new Euler()\n\nfunction randomizeAim(quaternion: Quaternion, maxAngle: number): Quaternion {\n\treturn quaternion\n\t\t.clone()\n\t\t.multiply(\n\t\t\tnew Quaternion().setFromEuler(\n\t\t\t\tAIM_EULER.set(\n\t\t\t\t\tMathUtils.randFloat(-maxAngle, maxAngle),\n\t\t\t\t\tMathUtils.randFloat(-maxAngle, maxAngle),\n\t\t\t\t\t0,\n\t\t\t\t\t'YXZ'\n\t\t\t\t)\n\t\t\t)\n\t\t)\n}\n","import Emitter, { EmitterType } from '../components/com_emitter'\nimport { System } from './system'\nimport Transform3D from '../components/com_transform3d'\nimport { Vector3 } from 'three'\nimport Tumbler from '../factory/tumbler'\nimport Ammo from '../factory/ammo'\nimport AmmoComponent from '../components/com_ammo'\nimport Bullet from '../factory/bullet'\n\nexport default class EmitterSystem extends System {\n\tview = this.world.view(Emitter, Transform3D)\n\tupdate() {\n\t\tthis.view.each((entity, emitter, transform) => {\n\t\t\tif (!emitter.active) return\n\t\t\tif (++emitter.tick >= emitter.interval) {\n\t\t\t\temitter.tick = 0\n\t\t\t\tswitch (emitter.type) {\n\t\t\t\t\tcase EmitterType.Turret:\n\t\t\t\t\t\tif (emitter.useAmmo) {\n\t\t\t\t\t\t\tconst ammo = this.world.get(entity, AmmoComponent)\n\t\t\t\t\t\t\tif (!ammo) throw 'Turret missing ammo component'\n\t\t\t\t\t\t\tif (ammo.current === 0) return\n\t\t\t\t\t\t\tammo.current--\n\t\t\t\t\t\t\tammo.sprite.scale.setComponent(0, ammo.current / ammo.max)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnew Bullet(transform.position, emitter.direction).addToGame(\n\t\t\t\t\t\t\tthis.game\n\t\t\t\t\t\t)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase EmitterType.Loader:\n\t\t\t\t\t\tnew Ammo(\n\t\t\t\t\t\t\ttransform.position.clone().add(emitter.origin),\n\t\t\t\t\t\t\temitter.direction\n\t\t\t\t\t\t).addToGame(this.game)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase EmitterType.RiverSpawner:\n\t\t\t\t\t\tnew Tumbler(\n\t\t\t\t\t\t\temitter.spawnArea.at(Math.random(), new Vector3()),\n\t\t\t\t\t\t\temitter.direction\n\t\t\t\t\t\t).addToGame(this.game)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport Transform3D from '../components/com_transform3d'\nimport { Entity, Tag } from 'uecs'\nimport Velocity3D from '../components/com_velocity3d'\nimport { Group, Raycaster } from 'three'\nimport { FLOOR_Y } from '../game/level'\nimport Game from '../game'\nimport { TUMBLER_CUBE_SIZE } from '../factory/tumbler'\nimport { GameObjectTypes } from '../factory/game_object'\n\nconst MAX_DISTANCE = 100\nconst MAX_DISTANCE_SQ = MAX_DISTANCE ** 2\nconst ENEMY_SIZE_SQ = (TUMBLER_CUBE_SIZE / 2) ** 2\n\nexport default class BulletSystem extends System {\n\tview = this.world.view(\n\t\tTransform3D,\n\t\tVelocity3D,\n\t\tTag.for(GameObjectTypes.Bullet)\n\t)\n\tenemies = this.world.view(Transform3D, Tag.for(GameObjectTypes.Tumbler))\n\ttumblerGroup: Group\n\traycaster = new Raycaster()\n\tconstructor(game: Game) {\n\t\tsuper(game)\n\t\tthis.tumblerGroup = this.threeApp.groups.get(GameObjectTypes.Tumbler)!\n\t}\n\tupdate(tick: number) {\n\t\tthis.view.each((entity, transform, velocity) => {\n\t\t\tconst velocityLength = velocity.vector3.length()\n\t\t\tif (\n\t\t\t\tvelocityLength < 0.05 ||\n\t\t\t\ttransform.position.lengthSq() > MAX_DISTANCE_SQ ||\n\t\t\t\ttransform.position.y <= FLOOR_Y\n\t\t\t) {\n\t\t\t\tthis.world.destroy(entity)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.enemies.each((enemy, { position: enemyPos }) => {\n\t\t\t\tif (transform.position.distanceToSquared(enemyPos) <= ENEMY_SIZE_SQ) {\n\t\t\t\t\tthis.hitEnemy(entity, enemy)\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t\tif (!this.world.exists(entity)) return\n\t\t\tthis.raycaster.set(\n\t\t\t\ttransform.position,\n\t\t\t\tvelocity.vector3.clone().normalize()\n\t\t\t)\n\t\t\tthis.raycaster.far = velocityLength\n\t\t\tconst [hitEnemy] = this.raycaster.intersectObjects(\n\t\t\t\tthis.tumblerGroup.children\n\t\t\t)\n\t\t\tif (hitEnemy) this.hitEnemy(entity, hitEnemy.object.userData.entity)\n\t\t\tif (!this.world.exists(entity)) return\n\t\t\ttransform.scale.z = velocityLength / Game.TurretProperties.bulletSpeed\n\t\t\tvelocity.vector3.multiplyScalar(0.95)\n\t\t\ttransform.scale.multiplyScalar(0.98)\n\t\t\ttransform.lastUpdated = tick\n\t\t})\n\t}\n\thitEnemy(bullet: Entity, enemy: Entity) {\n\t\tthis.world.destroy(bullet)\n\t\t// const health = this.world.get(enemy, Health)!\n\t\t// health.current -= 1\n\t\t// health.sprite.visible = true\n\t\t// health.sprite.scale.setComponent(0, health.current / health.max)\n\t\t// if (health.current <= 0) {\n\t\t// \tthis.world.destroy(enemy)\n\t\t// }\n\t}\n}\n","import { Quaternion } from 'three'\n\nexport default class Rotate3D {\n\tconstructor(public quaternion: Quaternion) {}\n}\n","import { System } from './system'\nimport Transform3D from '../components/com_transform3d'\nimport Rotate3D from '../components/com_rotate3d'\n\nexport default class RotateSystem extends System {\n\tview = this.world.view(Transform3D, Rotate3D)\n\tupdate(tick: number) {\n\t\tthis.view.each((entity, transform, rotation) => {\n\t\t\ttransform.rotation.multiply(rotation.quaternion)\n\t\t\ttransform.lastUpdated = tick\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport Target, { TargetPriority } from '../components/com_target'\nimport Transform3D from '../components/com_transform3d'\nimport { Entity, Tag, View } from 'uecs'\nimport { Object3D } from 'three'\nimport Emitter from '../components/com_emitter'\nimport { Constructor } from 'uecs/dist/util'\nimport AmmoComponent from '../components/com_ammo'\nimport { GameObjectTypes } from '../factory/game_object'\n\nconst objectProxy = new Object3D() // Could use a Matrix4 but the API is more complex\n\nexport default class TargetSystem extends System {\n\tview = this.world.view(Transform3D, Target)\n\ttargetViews: Map<\n\t\tGameObjectTypes,\n\t\tView<[Constructor<Transform3D>]>\n\t> = new Map()\n\tupdate(tick: number) {\n\t\tthis.view.each((entity, transform, target) => {\n\t\t\tconst maxDistanceSquared = target.maxDistance ** 2\n\t\t\tconst emitter = this.world.get(entity, Emitter)\n\t\t\tif (target.preferExisting) {\n\t\t\t\t// Retain existing target if in range\n\t\t\t\tconst targetTransform =\n\t\t\t\t\ttarget.entity && this.world.get(target.entity, Transform3D)\n\t\t\t\tif (\n\t\t\t\t\ttargetTransform &&\n\t\t\t\t\ttargetTransform.position.distanceToSquared(transform.position) <=\n\t\t\t\t\t\tmaxDistanceSquared\n\t\t\t\t) {\n\t\t\t\t\tsetTarget(tick, transform, targetTransform, target, emitter)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Acquire highest priority target\n\t\t\tlet bestTarget: [Entity, Transform3D, number] | undefined\n\t\t\tif (!this.targetViews.has(target.type))\n\t\t\t\tthis.targetViews.set(\n\t\t\t\t\ttarget.type,\n\t\t\t\t\tthis.world.view(Transform3D, Tag.for(target.type))\n\t\t\t\t)\n\t\t\tthis.targetViews\n\t\t\t\t.get(target.type)!\n\t\t\t\t.each((targetEntity, targetTransform) => {\n\t\t\t\t\tconst distanceSquared = targetTransform.position.distanceToSquared(\n\t\t\t\t\t\ttransform.position\n\t\t\t\t\t)\n\t\t\t\t\tif (distanceSquared > maxDistanceSquared) return\n\t\t\t\t\tlet score = 0\n\t\t\t\t\tswitch (target.priority) {\n\t\t\t\t\t\tcase TargetPriority.Nearest:\n\t\t\t\t\t\t\tscore =\n\t\t\t\t\t\t\t\t(maxDistanceSquared - distanceSquared) / maxDistanceSquared\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\tcase TargetPriority.LowestAmmo:\n\t\t\t\t\t\t\tconst ammo = this.world.get(targetEntity, AmmoComponent)!\n\t\t\t\t\t\t\tscore = (ammo.max - ammo.current) / ammo.max\n\t\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (score > 0 && (!bestTarget || score > bestTarget[2]))\n\t\t\t\t\t\tbestTarget = [targetEntity, targetTransform, score]\n\t\t\t\t})\n\t\t\tif (emitter) emitter.active = !!bestTarget\n\t\t\tif (bestTarget) {\n\t\t\t\ttarget.entity = bestTarget[0]\n\t\t\t\tsetTarget(tick, transform, bestTarget[1], target, emitter)\n\t\t\t} else {\n\t\t\t\ttarget.entity = null\n\t\t\t}\n\t\t})\n\t}\n}\n\nfunction setTarget(\n\ttick: number,\n\ttransform: Transform3D,\n\ttargetTransform: Transform3D,\n\ttarget: Target,\n\temitter?: Emitter\n) {\n\tobjectProxy.position.copy(transform.position)\n\tif (emitter) {\n\t\tif (emitter.origin.lengthSq() > 0) objectProxy.position.add(emitter.origin)\n\t\tobjectProxy.lookAt(targetTransform.position)\n\t\temitter.direction.copy(objectProxy.quaternion)\n\t}\n\tif (target.faceTarget) {\n\t\tobjectProxy.lookAt(targetTransform.position)\n\t\ttransform.rotation.copy(objectProxy.quaternion)\n\t\ttransform.lastUpdated = tick\n\t}\n}\n","import { System } from './system'\nimport Transform3D from '../components/com_transform3d'\nimport { Tag } from 'uecs'\nimport { FLOOR_Y } from '../game/level'\nimport Ammo from '../components/com_ammo'\nimport { GameObjectTypes } from '../factory/game_object'\n\nconst MAX_DISTANCE = 100\nconst MAX_DISTANCE_SQ = MAX_DISTANCE ** 2\nconst TURRET_SIZE_SQ = (1 / 2) ** 2\n\nconst AMMO_AMOUNT = 5\n\nexport default class AmmoSystem extends System {\n\tview = this.world.view(Transform3D, Tag.for(GameObjectTypes.Ammo))\n\tturrets = this.world.view(Transform3D, Tag.for(GameObjectTypes.Turret))\n\tupdate() {\n\t\tthis.view.each((entity, transform) => {\n\t\t\tif (\n\t\t\t\ttransform.position.lengthSq() > MAX_DISTANCE_SQ ||\n\t\t\t\ttransform.position.y <= FLOOR_Y\n\t\t\t) {\n\t\t\t\tthis.world.destroy(entity)\n\t\t\t\treturn\n\t\t\t}\n\t\t\tthis.turrets.each((turret, { position: turretPos }) => {\n\t\t\t\tif (transform.position.distanceToSquared(turretPos) <= TURRET_SIZE_SQ) {\n\t\t\t\t\tthis.world.destroy(entity)\n\t\t\t\t\tconst ammo = this.world.get(turret, Ammo)!\n\t\t\t\t\tammo.current = Math.min(ammo.max, ammo.current + AMMO_AMOUNT)\n\t\t\t\t\tammo.sprite.scale.setComponent(0, ammo.current / ammo.max)\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport Transform3D from '../components/com_transform3d'\nimport PhysicsBody from '../components/com_physicsbody'\nimport * as CANNON from 'cannon-es'\nimport { Quaternion, Vector3 } from 'three'\nimport Velocity3D from '../components/com_velocity3d'\nimport Game from '../game'\n\n// TODO: Create unified three/cannon Vector3 and Quaternion?\nconst MAX_DISTANCE = 50\nconst MAX_DISTANCE_SQ = MAX_DISTANCE ** 2\n\nexport default class PhysicsSystem extends System {\n\tbodies = this.world.view(PhysicsBody, Transform3D)\n\tupdate(tick: number) {\n\t\tthis.bodies.each(\n\t\t\t(entity, { body }, { lastUpdated, prevPosition, prevRotation }) => {\n\t\t\t\tif (body.type === CANNON.Body.DYNAMIC) return\n\t\t\t\t// For static and kinetic bodies, ECS is the source of truth\n\t\t\t\tif (lastUpdated === tick) {\n\t\t\t\t\t// Previous transform is used because velocity/rotation will be applied\n\t\t\t\t\tbody.position.copy(<CANNON.Vec3>(<unknown>prevPosition))\n\t\t\t\t\tbody.quaternion.copy(<CANNON.Quaternion>(<unknown>prevRotation))\n\t\t\t\t}\n\t\t\t\tif (body.type === CANNON.Body.STATIC) return\n\t\t\t\tconst velocity = this.world.get(entity, Velocity3D)\n\t\t\t\tif (velocity)\n\t\t\t\t\tbody.velocity.copy(\n\t\t\t\t\t\t<CANNON.Vec3>(\n\t\t\t\t\t\t\t(<unknown>velocity.vector3.clone().multiplyScalar(Game.TickRate))\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\telse body.velocity.setZero()\n\t\t\t}\n\t\t)\n\t\tthis.game.physics.world.step(1 / Game.TickRate)\n\t\tthis.bodies.each((entity, { body }, transform) => {\n\t\t\tif (body.type !== CANNON.Body.DYNAMIC) return\n\t\t\tif (body.position.lengthSquared() > MAX_DISTANCE_SQ) {\n\t\t\t\tthis.world.destroy(entity)\n\t\t\t\treturn\n\t\t\t}\n\t\t\t// For dynamic bodies, physics bodies are the source of truth\n\t\t\tif (\n\t\t\t\tbody.sleepState === CANNON.Body.SLEEPY ||\n\t\t\t\tbody.sleepState === CANNON.Body.SLEEPING\n\t\t\t)\n\t\t\t\treturn\n\t\t\ttransform.position.copy(<Vector3>(<unknown>body.position))\n\t\t\ttransform.rotation.copy(<Quaternion>(<unknown>body.quaternion))\n\t\t\ttransform.lastUpdated = tick\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport Transform3D from '../components/com_transform3d'\n\nexport default class TransformSystem extends System {\n\ttransforms = this.world.view(Transform3D)\n\tupdate() {\n\t\tthis.transforms.each((entity, transform) => {\n\t\t\ttransform.prevPosition.copy(transform.position)\n\t\t\ttransform.prevRotation.copy(transform.rotation)\n\t\t\ttransform.prevScale.copy(transform.scale)\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport Orbit from '../components/com_orbit'\nimport ForceComponent from '../components/com_force'\nimport Transform3D from '../components/com_transform3d'\nimport { Quaternion, Vector2, Vector3 } from 'three'\n\nconst UP = new Vector3(0, 1, 0)\nconst SLICES = 360\nconst RADIANS_PER_SLICE = (2 * Math.PI) / SLICES\nconst orbitQuaternions: Quaternion[] = []\nfor (let i = 0; i < SLICES; i++) {\n\torbitQuaternions.push(\n\t\tnew Quaternion().setFromAxisAngle(UP, -i * RADIANS_PER_SLICE - Math.PI / 2)\n\t)\n}\n\nconst RADIUS_VECTOR = new Vector2()\n\nexport default class OrbitSystem extends System {\n\tview = this.world.view(Orbit, Transform3D, ForceComponent)\n\tupdate(tick: number) {\n\t\tthis.view.each((entity, { origin, ccw }, { position }, force) => {\n\t\t\tif (tick % force.applyRate > 0) return\n\t\t\tRADIUS_VECTOR.set(position.x, position.z).sub(origin)\n\t\t\tlet slice = Math.round((RADIUS_VECTOR.angle() / (Math.PI * 2)) * SLICES)\n\t\t\tif (ccw) slice += SLICES / 2\n\t\t\tconst orbitQuaternion = orbitQuaternions[slice % SLICES]\n\t\t\tforce.direction.copy(orbitQuaternion)\n\t\t\tforce.dirty = true\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport PhysicsBody from '../components/com_physicsbody'\nimport ForceComponent from '../components/com_force'\nimport { ArrowHelper, Vector3 } from 'three'\nimport CANNON from 'cannon-es'\n\nexport default class ForceSystem extends System {\n\tview = this.world.view(PhysicsBody, ForceComponent)\n\tupdate(tick: number) {\n\t\tthis.view.each((entity, { body }, force) => {\n\t\t\tif (tick % force.applyRate > 0) return\n\t\t\tif (force.dirty) {\n\t\t\t\t// Calculate velocity vector from direction and magnitude\n\t\t\t\tforce.dirty = false\n\t\t\t\tforce.velocity\n\t\t\t\t\t.set(force.magnitude, 0, 0)\n\t\t\t\t\t.applyQuaternion(force.direction)\n\t\t\t}\n\t\t\tif (force.showForceVector) {\n\t\t\t\tif (!force.arrow) {\n\t\t\t\t\tforce.arrow = new ArrowHelper()\n\t\t\t\t\tthis.threeApp.scene.add(force.arrow)\n\t\t\t\t}\n\t\t\t\tforce.arrow.setLength(force.magnitude)\n\t\t\t\tforce.arrow.position.copy(<Vector3>(<unknown>body.position))\n\t\t\t\tforce.arrow.setDirection(force.velocity.clone().normalize())\n\t\t\t}\n\t\t\tif (force.limit) {\n\t\t\t\t// Limit body velocity in direction of force\n\t\t\t\tconst velocityDotProduct = force.velocity\n\t\t\t\t\t.clone()\n\t\t\t\t\t.normalize()\n\t\t\t\t\t.dot(<Vector3>(<unknown>body.velocity.unit()))\n\t\t\t\tconst velocityRatio =\n\t\t\t\t\t(body.velocity.length() / force.limit) * velocityDotProduct\n\t\t\t\tconst velocityScale = Math.min(1, 1 - velocityRatio)\n\t\t\t\tif (velocityScale > 0)\n\t\t\t\t\tbody.applyForce(\n\t\t\t\t\t\t<CANNON.Vec3>(\n\t\t\t\t\t\t\t(<unknown>force.velocity.clone().multiplyScalar(velocityScale))\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tbody.applyForce(<CANNON.Vec3>(<unknown>force.velocity))\n\t\t\t}\n\t\t})\n\t}\n}\n","import { System } from './system'\nimport { Box3, Vector3 } from 'three'\nimport { ThreeApp } from '../three/three_app'\n\nconst followBox = new Box3()\nconst followVec = new Vector3()\n\nexport default class CameraFollowSystem extends System {\n\tcontrols = this.threeApp.cameraControls\n\tupdate() {\n\t\tif (!ThreeApp.FollowObject) return\n\t\tif (!ThreeApp.FollowObject.parent) {\n\t\t\tthis.game.interaction.followObject()\n\t\t\tthis.game.gui.update()\n\t\t\treturn\n\t\t}\n\t\tfollowBox.setFromObject(ThreeApp.FollowObject)\n\t\tfollowBox.getCenter(followVec)\n\t\tthis.controls.setTarget(followVec.x, 0, followVec.z, true)\n\t}\n}\n","import { World } from 'uecs'\nimport Game from './'\nimport { System } from '../systems/system'\nimport RenderSystem from '../systems/sys_render'\nimport VelocitySystem from '../systems/sys_velocity'\nimport EmitterSystem from '../systems/sys_emitter'\nimport BulletSystem from '../systems/sys_bullet'\nimport RotateSystem from '../systems/sys_rotate'\nimport TargetSystem from '../systems/sys_target'\nimport AmmoSystem from '../systems/sys_ammo'\nimport PhysicsSystem from '../systems/sys_physics'\nimport TransformSystem from '../systems/sys_transform'\nimport OrbitSystem from '../systems/sys_orbit'\nimport ForceSystem from '../systems/sys_force'\nimport CameraFollowSystem from '../systems/sys_camera_follow'\n\nexport default class ECS {\n\tworld = new World()\n\tsystems: System[] = []\n\tregisterSystems(game: Game) {\n\t\tthis.systems.push(new TransformSystem(game))\n\t\tthis.systems.push(new VelocitySystem(game))\n\t\tthis.systems.push(new RotateSystem(game))\n\t\tthis.systems.push(new TargetSystem(game))\n\t\tthis.systems.push(new EmitterSystem(game))\n\t\tthis.systems.push(new BulletSystem(game))\n\t\tthis.systems.push(new AmmoSystem(game))\n\t\t// this.systems.push(new PathSystem(game))\n\t\tthis.systems.push(new OrbitSystem(game))\n\t\tthis.systems.push(new ForceSystem(game))\n\t\tthis.systems.push(new PhysicsSystem(game))\n\t\tgame.threeApp.systems.push(new RenderSystem(game))\n\t\tgame.threeApp.systems.push(new CameraFollowSystem(game))\n\t}\n\tupdate(tick: number) {\n\t\tthis.systems.forEach((system) => system.update(tick))\n\t}\n}\n","import { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader'\nimport { BufferGeometryUtils } from 'three/examples/jsm/utils/BufferGeometryUtils'\nimport { BufferGeometry, Mesh } from 'three'\nimport turretObj from '../assets/turret.obj'\nimport loaderObj from '../assets/loader.obj'\n\nexport enum AssetNames {\n\tTurretGeometry,\n\tLoaderGeometry,\n}\n\nconst assetList: [AssetNames, string][] = [\n\t[AssetNames.TurretGeometry, turretObj],\n\t[AssetNames.LoaderGeometry, loaderObj],\n]\n\nconst Assets: Map<AssetNames, BufferGeometry> = new Map()\nexport default Assets\n\nexport async function loadAssets() {\n\tconst loader = new OBJLoader()\n\tawait Promise.all(\n\t\tassetList.map(async ([assetName, objPath]) => {\n\t\t\tconst group = await loader.loadAsync(objPath)\n\t\t\tconst geometry = BufferGeometryUtils.mergeVertices(\n\t\t\t\t(<Mesh>group.children[0]).geometry,\n\t\t\t\t0.01\n\t\t\t)\n\t\t\tgeometry.translate(0, -0.5, 0)\n\t\t\tAssets.set(assetName, geometry)\n\t\t})\n\t)\n}\n","import { Object3D, Quaternion, SpriteMaterial, Vector3 } from 'three'\nimport Emitter, { EmitterType } from '../components/com_emitter'\nimport Game from '../game'\nimport GameObject, { GameObjectTypes } from './game_object'\nimport Target from '../components/com_target'\nimport Assets, { AssetNames } from '../three/assets'\nimport { createMesh, createSprite } from '../three/objects'\nimport AmmoComponent from '../components/com_ammo'\n\nconst MAX_AMMO = 100\n\nconst ammoSpriteMaterial = new SpriteMaterial({ color: 0xa5ffc4 })\n\nlet turretPrototype: Object3D\n\nexport default class Turret extends GameObject {\n\tconstructor(position: Vector3, rotation?: Quaternion) {\n\t\tturretPrototype =\n\t\t\tturretPrototype ||\n\t\t\tcreateMesh({\n\t\t\t\tgeometry: Assets.get(AssetNames.TurretGeometry),\n\t\t\t\tmaterialParams: { color: 0x38b764 },\n\t\t\t\tmeshProperties: { castShadow: true },\n\t\t\t})\n\t\tsuper(GameObjectTypes.Turret, turretPrototype.clone())\n\t\tthis.transform = { position, rotation }\n\t\tconst ammoBar = createSprite()\n\t\tammoBar.position.set(0, 0.4, 0)\n\t\tammoBar.scale.setComponent(1, 0.2)\n\t\tammoBar.material = ammoSpriteMaterial\n\t\tthis.children = [ammoBar]\n\t\tthis.additionalComponents = [\n\t\t\tnew Emitter(\n\t\t\t\tEmitterType.Turret,\n\t\t\t\tMath.round(Game.TickRate / Game.TurretProperties.fireRate),\n\t\t\t\tnew Vector3(),\n\t\t\t\t0,\n\t\t\t\tfalse,\n\t\t\t\ttrue\n\t\t\t),\n\t\t\tnew Target(GameObjectTypes.Tumbler, Game.TurretProperties.targetDistance),\n\t\t\tnew AmmoComponent(MAX_AMMO, ammoBar),\n\t\t]\n\t}\n}\n","import GameObject, { GameObjectTypes } from './game_object'\nimport { createMesh } from '../three/objects'\nimport Assets, { AssetNames } from '../three/assets'\nimport { Object3D, Quaternion, Vector3 } from 'three'\nimport Emitter, { EmitterType } from '../components/com_emitter'\nimport Target, { TargetPriority } from '../components/com_target'\n\nconst MAX_DISTANCE = 5\nconst EMITTER_HEIGHT = 0.9\n\nlet ammoLoaderPrototype: Object3D\n\nexport default class AmmoLoader extends GameObject {\n\tconstructor(position: Vector3, rotation?: Quaternion) {\n\t\tammoLoaderPrototype =\n\t\t\tammoLoaderPrototype ||\n\t\t\tcreateMesh({\n\t\t\t\tgeometry: Assets.get(AssetNames.LoaderGeometry),\n\t\t\t\tmaterialParams: { color: 0x2da5b1 },\n\t\t\t\tmeshProperties: { castShadow: true },\n\t\t\t})\n\t\tsuper(GameObjectTypes.AmmoLoader, ammoLoaderPrototype.clone())\n\t\tthis.transform = { position, rotation }\n\t\tthis.additionalComponents = [\n\t\t\tnew Emitter(\n\t\t\t\tEmitterType.Loader,\n\t\t\t\t10,\n\t\t\t\tnew Vector3(0, EMITTER_HEIGHT, 0),\n\t\t\t\t0,\n\t\t\t\tfalse\n\t\t\t),\n\t\t\tnew Target(\n\t\t\t\tGameObjectTypes.Turret,\n\t\t\t\tMAX_DISTANCE,\n\t\t\t\tfalse,\n\t\t\t\tTargetPriority.LowestAmmo,\n\t\t\t\tfalse\n\t\t\t),\n\t\t]\n\t}\n}\n","import Game from './'\nimport { Raycaster } from 'three'\nimport { FLOOR_Y } from './level'\nimport Turret from '../factory/turret'\nimport AmmoLoader from '../factory/ammo_loader'\nimport { Tag } from 'uecs'\nimport { GameObjectTypes } from '../factory/game_object'\nimport { ThreeApp } from '../three/three_app'\n\nexport enum InteractionState {\n\tNONE,\n\tFOLLOW,\n\tBUILD_TURRET,\n\tBUILD_LOADER,\n}\n\nexport default class Interaction {\n\tstate: InteractionState = InteractionState.NONE\n\tgame: Game\n\tconstructor(game: Game) {\n\t\tthis.game = game\n\n\t\t// Handle mouse clicks\n\t\tconst raycaster = new Raycaster()\n\t\tthis.game.threeApp.renderer.domElement.addEventListener(\n\t\t\t'mousedown',\n\t\t\t(event) => {\n\t\t\t\tif (event.button !== 0) return\n\t\t\t\tif (this.state === InteractionState.FOLLOW) this.followObject()\n\t\t\t\tconst mouse = {\n\t\t\t\t\tx: (event.clientX / window.innerWidth) * 2 - 1,\n\t\t\t\t\ty: -(event.clientY / window.innerHeight) * 2 + 1,\n\t\t\t\t}\n\t\t\t\traycaster.setFromCamera(mouse, this.game.threeApp.camera)\n\t\t\t\tconst intersected = raycaster.intersectObjects(\n\t\t\t\t\tthis.game.threeApp.scene.children\n\t\t\t\t)\n\t\t\t\tif (this.state === InteractionState.NONE) {\n\t\t\t\t\tconst tumblerClick = intersected.find((i) =>\n\t\t\t\t\t\tthis.game.world.has(\n\t\t\t\t\t\t\ti.object.userData.entity,\n\t\t\t\t\t\t\tTag.for(GameObjectTypes.Tumbler)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\tif (tumblerClick) this.followObject(tumblerClick.object)\n\t\t\t\t} else {\n\t\t\t\t\tconst groundClick = intersected.find(\n\t\t\t\t\t\t(i) => i.object === this.game.level.ground\n\t\t\t\t\t)\n\t\t\t\t\tif (groundClick) {\n\t\t\t\t\t\tif (groundClick.point.manhattanLength() > 50) return\n\t\t\t\t\t\tswitch (this.state) {\n\t\t\t\t\t\t\tcase InteractionState.BUILD_TURRET:\n\t\t\t\t\t\t\t\tnew Turret(\n\t\t\t\t\t\t\t\t\tgroundClick.point.setComponent(1, FLOOR_Y + 0.5)\n\t\t\t\t\t\t\t\t).addToGame(this.game)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t\tcase InteractionState.BUILD_LOADER:\n\t\t\t\t\t\t\t\tnew AmmoLoader(\n\t\t\t\t\t\t\t\t\tgroundClick.point.setComponent(1, FLOOR_Y + 0.5)\n\t\t\t\t\t\t\t\t).addToGame(this.game)\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.game.gui.update()\n\t\t\t}\n\t\t)\n\t}\n\tfollowObject(object: typeof ThreeApp.FollowObject = null) {\n\t\tthis.state =\n\t\t\tobject === null ? InteractionState.NONE : InteractionState.FOLLOW\n\t\tthis.game.threeApp.cameraControls.dollyToCursor = object === null\n\t\tThreeApp.FollowObject = object\n\t}\n}\n","import Game from './'\nimport { InteractionState } from './interaction'\n\nexport default class GUI {\n\tgame: Game\n\tstatsContainer = document.createElement('div')\n\tbuildContainer = document.createElement('div')\n\tdisplays: Display[] = []\n\tbuttons: Button[] = []\n\tconstructor(game: Game) {\n\t\tthis.game = game\n\n\t\tthis.statsContainer.id = 'gui-stats-container'\n\t\tdocument.body.appendChild(this.statsContainer)\n\t\tthis.createDisplay('Tick', () => this.game.tick)\n\t\tthis.createDisplay('Entities', () => this.game.world.size())\n\t\tthis.createDisplay('Bodies', () => this.game.physics.world.bodies.length)\n\t\tsetInterval(() => {\n\t\t\tthis.displays.forEach((d) => d.update())\n\t\t}, 200)\n\n\t\tthis.buildContainer.id = 'gui-build-container'\n\t\tdocument.body.appendChild(this.buildContainer)\n\t\tconst heading = document.createElement('h2')\n\t\theading.innerText = 'Build'\n\t\tthis.buildContainer.appendChild(heading)\n\n\t\tthis.createButton('Turret', InteractionState.BUILD_TURRET)\n\t\tthis.createButton('Loader', InteractionState.BUILD_LOADER)\n\t\tthis.createButton('cancel', InteractionState.NONE, true)\n\t\tthis.update()\n\t}\n\n\tupdate() {\n\t\tif (this.game.interaction.state === InteractionState.FOLLOW) {\n\t\t\tthis.buildContainer.style.visibility = 'hidden'\n\t\t\treturn\n\t\t}\n\t\tthis.buildContainer.style.visibility = 'visible'\n\t\tthis.buttons.forEach(({ element, state, hideOnState }) => {\n\t\t\telement.disabled = this.game.interaction.state === state\n\t\t\tif (hideOnState)\n\t\t\t\telement.style.visibility =\n\t\t\t\t\tthis.game.interaction.state === state ? 'hidden' : 'visible'\n\t\t})\n\t}\n\n\tcreateDisplay(name: string, getValue: () => string | number) {\n\t\tconst element = document.createElement('span')\n\t\tthis.statsContainer.appendChild(element)\n\t\tthis.displays.push({\n\t\t\tname,\n\t\t\tupdate: () => (element.innerText = `${name}: ${getValue()}`),\n\t\t\telement,\n\t\t})\n\t}\n\n\tcreateButton(label: string, state: InteractionState, hideOnState = false) {\n\t\tconst element = document.createElement('button')\n\t\telement.innerText = label\n\t\telement.addEventListener('click', () => {\n\t\t\tthis.game.interaction.state = state\n\t\t\tthis.update()\n\t\t})\n\t\tthis.buildContainer.appendChild(element)\n\t\tthis.buttons.push({ element, state, hideOnState })\n\t}\n}\n\ndeclare type Display = {\n\tname: string\n\tupdate: () => void\n\telement: HTMLElement\n}\n\ndeclare type Button = {\n\telement: HTMLButtonElement\n\tstate: InteractionState\n\thideOnState: boolean\n}\n","import { ThreeApp } from '../three/three_app'\nimport ECS from './ecs'\nimport Stats from 'three/examples/jsm/libs/stats.module'\nimport { Level } from './level'\nimport { createDebugGUI } from './debug'\nimport GUI from './gui'\nimport Interaction from './interaction'\nimport { Physics } from './physics'\nimport { loadAssets } from '../three/assets'\n\n// TODO: Change as many properties as possible to static, including in ThreeApp\n// Like the Discord class in D-Bot-TS\n\nexport default class Game {\n\tthreeApp = new ThreeApp()\n\tecs = new ECS()\n\tworld = this.ecs.world\n\tphysics = new Physics()\n\tlevel = new Level(this)\n\tinteraction = new Interaction(this)\n\tgui = new GUI(this)\n\ttick = 0\n\tstatic TickRate = 60\n\tstatic TickTime = 1000 / Game.TickRate\n\tstatic preloadTicks = 2000\n\tpaused = false\n\tinterpolate = true\n\tstatic TurretProperties = {\n\t\tfireRate: 12,\n\t\ttargetDistance: 5,\n\t\tbulletSpeed: 0.5,\n\t\tbulletSpread: 5,\n\t}\n\tasync init() {\n\t\tawait loadAssets()\n\t\tthis.level.create()\n\n\t\tthis.ecs.registerSystems(this)\n\n\t\tcreateDebugGUI(this)\n\t\tconst stats = Stats()\n\t\tdocument.body.appendChild(stats.dom)\n\n\t\t// Main loop\n\t\tlet lag = 0\n\t\tlet lastUpdate = performance.now()\n\t\tconst update = () => {\n\t\t\t// Adapted from https://gist.github.com/godwhoa/e6225ae99853aac1f633\n\t\t\trequestAnimationFrame(update)\n\t\t\tconst now = performance.now()\n\t\t\tif (!this.paused) {\n\t\t\t\tlet delta = now - lastUpdate\n\t\t\t\tif (delta > 1000) delta = Game.TickTime\n\t\t\t\tlag += delta\n\t\t\t\twhile (lag >= Game.TickTime) {\n\t\t\t\t\tthis.ecs.update(++this.tick)\n\t\t\t\t\tlag -= Game.TickTime\n\t\t\t\t}\n\t\t\t}\n\t\t\tlastUpdate = now\n\t\t\tstats.begin()\n\t\t\tthis.threeApp.render(this.tick, lag / Game.TickTime)\n\t\t\tstats.end()\n\t\t}\n\t\twhile (this.tick < Game.preloadTicks) {\n\t\t\tthis.ecs.update(++this.tick)\n\t\t}\n\t\tupdate()\n\t}\n\tupdate() {}\n}\n","import Game from './'\nimport { GUI } from 'three/examples/jsm/libs/dat.gui.module'\n\nexport function createDebugGUI(game: Game) {\n\tconst gui = new GUI({ width: 200 })\n\n\tconst simFolder = gui.addFolder('Simulation')\n\tsimFolder\n\t\t.add(Game, 'TickTime', 1, 400)\n\t\t.onChange((tickTime) => (Game.TickTime = tickTime))\n\tsimFolder.add(\n\t\t{\n\t\t\t'Reset TickTime to default': () => {\n\t\t\t\tGame.TickTime = 1000 / Game.TickRate\n\t\t\t\tsimFolder.updateDisplay()\n\t\t\t},\n\t\t},\n\t\t'Reset TickTime to default'\n\t)\n\tsimFolder.add(\n\t\t{\n\t\t\t'+2000 ticks': () => {\n\t\t\t\tfor (let i = 0; i < 2000; i++) game.ecs.update(++game.tick)\n\t\t\t},\n\t\t},\n\t\t'+2000 ticks'\n\t)\n\tsimFolder.add(game, 'interpolate')\n\tsimFolder.add(game, 'paused')\n\tsimFolder\n\t\t.add(game.threeApp, 'smaa')\n\t\t.onFinishChange((enabled) => (game.threeApp.smaaPass.enabled = enabled))\n\tsimFolder.open()\n\n\t// const turretFolder = gui.addFolder('Turrets')\n\t// turretFolder\n\t// \t.add(game.TurretProperties, 'fireRate', 1, 60)\n\t// \t.onChange((shootInterval) => {\n\t// \t\tgame.TurretProperties.fireRate = Math.round(shootInterval)\n\t// \t\tgame.world\n\t// \t\t\t.view(Emitter, Tag.for(GameObjectTypes.Turret))\n\t// \t\t\t.each((e, emitter) => {\n\t// \t\t\t\temitter.interval = Math.round(\n\t// \t\t\t\t\tgame.TickRate / game.TurretProperties.fireRate\n\t// \t\t\t\t)\n\t// \t\t\t})\n\t// \t})\n\t// turretFolder\n\t// \t.add(game.TurretProperties, 'targetDistance', 0, 30)\n\t// \t.onChange((targetDistance) => {\n\t// \t\tgame.world\n\t// \t\t\t.view(Target, Tag.for(GameObjectTypes.Turret))\n\t// \t\t\t.each((e, target) => {\n\t// \t\t\t\ttarget.maxDistance = targetDistance\n\t// \t\t\t})\n\t// \t})\n\t// turretFolder.add(game.TurretProperties, 'bulletSpeed', 0.1, 1.2)\n\t// turretFolder.add(game.TurretProperties, 'bulletSpread', 0, 60)\n\t// turretFolder.open()\n}\n","import './style.css'\nimport { WEBGL } from 'three/examples/jsm/WebGL'\nimport Game from './game'\n\nif (WEBGL.isWebGLAvailable()) {\n\tnew Game().init()\n} else {\n\tdocument.body.appendChild(WEBGL.getWebGLErrorMessage())\n}\nexport { GameObjectTypes } from './factory/game_object'\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tfor(moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) var result = runtime(__webpack_require__);\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkIds[i]] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunktd_trial\"] = self[\"webpackChunktd_trial\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [189], () => (__webpack_require__(516)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"sourceRoot":""}